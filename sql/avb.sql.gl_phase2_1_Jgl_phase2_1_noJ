--Create a table that compares user specified table a and b. This table has columns:
--(a_IAU_desig, b_IAU_desig, dist_sq, a.m3_6, b.m3_6, a.m4_5, b.m4_5, a.m5_8, b.m5_8, a.m8_0, b.m8+0)
--currently positions of objects in a and b must be in RA and DEC.
--For each object in table a, search for all objects in table b within a square centered around the object, within user specified margin

SELECT load_extension('/home/kecai/w49/libsqlitefunctions.so');

CREATE TABLE IF NOT EXISTS gl_phase2_1_J_v_gl_phase2_1_noJ_1_nb AS 
SELECT a.desig AS gl_phase2_1_Jdesig, b.desig AS gl_phase2_1_noJdesig, SQRT(SQUARE(a.ra - b.ra) + SQUARE(a.dec - b.dec)) AS dist, 
a.m3_6 AS gl_phase2_1_Jm3_6, b.m3_6 AS gl_phase2_1_noJm3_6, a.m4_5 AS gl_phase2_1_Jm4_5, b.m4_5 AS gl_phase2_1_noJm4_5, a.m5_8 AS gl_phase2_1_Jm5_8, b.m5_8 AS gl_phase2_1_noJm5_8, a.m8_0 AS gl_phase2_1_Jm8_0, b.m8_0 AS gl_phase2_1_noJm8_0 
FROM gl_phase2_1_J AS a JOIN gl_phase2_1_noJ AS b 
WHERE (b.ra > (a.ra - 0.1)) AND (b.ra < (a.ra + 0.1)) AND (b.dec > (a.dec - 0.1)) AND (b.dec < (a.dec + 0.1))
ORDER BY a.desig, dist;

CREATE TABLE IF NOT EXISTS gl_phase2_1_J_v_gl_phase2_1_noJ_1 AS 
SELECT t.*
FROM gl_phase2_1_J_v_gl_phase2_1_noJ_1_nb AS t JOIN 
  (SELECT gl_phase2_1_Jdesig, MIN(dist) AS mds FROM gl_phase2_1_J_v_gl_phase2_1_noJ_1_nb GROUP BY gl_phase2_1_Jdesig) AS m ON 
  t.gl_phase2_1_Jdesig = m.gl_phase2_1_Jdesig AND t.dist = m.mds;
